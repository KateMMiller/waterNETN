% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getChemistry.R
\name{getChemistry}
\alias{getChemistry}
\title{getChemistry: query NETN water chemistry data}
\usage{
getChemistry(
  park = "all",
  site = "all",
  site_type = c("all", "lake", "stream"),
  years = 2006:format(Sys.Date(), "\%Y"),
  months = 5:10,
  QC_type = c("ENV", "all", "BLANK", "LABREP", "REP", "DUP"),
  sample_type = c("all", "G", "C"),
  sample_depth = c("all", "surface"),
  parameter = "all",
  include_censored = FALSE,
  output = c("short", "verbose")
)
}
\arguments{
\item{park}{Combine data from all parks or one or more parks at a time. Valid inputs:
\describe{
\item{"all"}{Includes all parks in the network}
\item{"ACAD"}{Acadia NP only}
\item{"MABI"}{Marsh-Billings-Rockefeller NHP only}
\item{"MIMA"}{Minute Man NHP only}
\item{"MORR"}{Morristown NHP only}
\item{"ROVA"}{Roosevelt-Vanderbilt NHS only}
\item{"SAGA"}{Saint-Gaudens NHP only}
\item{"SAIR"}{Saugus Iron Works NHS only}
\item{"SARA"}{Saratoga NHP only}
\item{"WEFA"}{Weir Farm NHP only}}}

\item{site}{Filter on 6-letter SiteCode (e.g., "ACABIN", "MORRSA", etc.). Easiest way to pick a site. Defaults to "all".}

\item{site_type}{Combine all site types, lakes or streams. Not needed if specifying particular sites.
\describe{
\item{"all"}{Default. Includes all site types, unless site or site_name select specific site types.}
\item{"lake"}{Include only lakes.}
\item{"stream"}{Include streams only.}
}}

\item{years}{Numeric. Years to query. Accepted values start at 2006.}

\item{months}{Numeric. Months to query by number. Accepted values range from 1:12. Note that most of the
events are between months 5 and 10, and these are set as the defaults.}

\item{QC_type}{Specify QC type to return.
\describe{
\item{"all"}{Include all QC types.}
\item{"ENV"}{Environmental. Default. Indicates a real non-QC sample.}
\item{"BLANK"}{Field blank}
\item{"DUP"}{Duplicate}
\item{"LABREP"}{Lab replicate}
\item{"REP"}{Field replicate}
}}

\item{sample_type}{Filter on sample type.
\describe{
\item{"all"}{Include all sample types}
\item{"C"}{Include Core samples only}
\item{"G"}{Include Grab samples only}
}}

\item{sample_depth}{Filter on sample depth. If "all" (Default), returns all sample depths. If "surface",
only returns the median value of samples collected <= 2m from the surface. SampleDepth_m is also the median
sample depth of samples collected within 2m of the surface.}

\item{parameter}{Specify the chemical parameter(s) to return. Note if additional parameters are added to the Chemistry view, there will be additional
to the views, they will be added as accepted values in this function. Current accepted values are:.
c("ANC", "ANC_ueqL", "AppColor", "AppColor_PCU", "ChlA", "ChlA_ugL", "Cl", "Cl_ueqL",
"DOC", "DOC_mgL", "NH3", "NH3_mgL", "NO2", "NO2_mgL", "NO2+NO3", "NO2+NO3_mgL",
"NO3", "NO3_ueqL", "pH_Lab", "PO4", "PO4_ugL", "SO4", "SO4_ueqL", "TN", "TN_mgL",
"TotDissN", "TotDissN_mgL", "TotDissP", "TotDissP_ugL", "TP", "TP_ugL")}

\item{include_censored}{Logical. If TRUE, the value column includes non-censored and censored values
using the MDL/MRL/UQL values in the parameter flags. If the Flag column is not NA, that indicates
the value is a censored value. If FALSE (Default), only non-censored values are returned in the value column.}

\item{output}{Specify if you want all fields returned (output = "verbose") or just the most important fields (output = "short"; default.)}
}
\value{
Data frame of chemistry data in long form.
}
\description{
Queries NETN water chemistry data by site, event, and parameter.
}
\examples{
\dontrun{
importData()

# get events for all sites in MABI from 2021-2023
mabi <- getChemistry(park = "MABI", years = 2021:2023)

# get events for SARA sites sampled in 2019 and 2023
sara <- getChemistry(park = "SARA", years = c(2019, 2023))

# get events for MIMA and SAIR
ma_parks <- getChemistry(park = c("SAIR", "MIMA"))

# get info for all ACAD lakes sampled in April
ACAD_lake4<- getChemistry(park = 'ACAD', site_type = 'lake', months = 4)

# get site info for 2 streams in MORR with full output
morr_sites <- getChemistry(site = c("MORRSA", "MORRSB"), output = 'verbose')
}
}
